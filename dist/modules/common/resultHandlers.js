"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HttpStatus = require("http-status-codes");
const logger_1 = require("./logger");
const lib_1 = require("../../../lib");
const log = logger_1.logger(logger_1.factory.getLogger('resultHandlers'));
exports.toPortalErrors = (messages) => messages.map((msg) => {
    return {
        type: lib_1.PortalErrorType.ERROR,
        body: msg,
        message: msg,
    };
});
exports.portalError = (message) => {
    console.log(message);
    return [
        {
            body: JSON.stringify(message),
            message: JSON.stringify(message),
            type: lib_1.PortalErrorType.ERROR,
        },
    ];
};
exports.successResult = (data) => {
    return {
        result: data,
        errors: undefined,
    };
};
exports.errorResult = (errors) => {
    return {
        errors,
        result: undefined,
    };
};
exports.successResultP = (data) => {
    return () => Promise.resolve({
        result: data,
        errors: undefined,
    });
};
exports.successResultStatusTask = (response) => (data) => {
    return () => Promise.resolve(response.json(data));
};
exports.errorResultP = (errors) => {
    return () => Promise.resolve({
        errors,
        result: undefined,
    });
};
exports.errorResultStatusTask = (response) => (errors) => {
    log.info(`error: ${JSON.stringify(errors)}`)();
    return () => Promise.resolve(response.status(HttpStatus.INTERNAL_SERVER_ERROR).json(errors));
};
exports.fromIOErrors = (errors) => errors.map((error) => {
    return {
        message: JSON.stringify(error),
        body: JSON.stringify(error),
        type: lib_1.PortalErrorType.ERROR,
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzdWx0SGFuZGxlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbW9kdWxlcy9jb21tb24vcmVzdWx0SGFuZGxlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFHQSxnREFBZ0Q7QUFDaEQscUNBQXlDO0FBQ3pDLHNDQUEwRDtBQUUxRCxNQUFNLEdBQUcsR0FBRyxlQUFNLENBQUMsZ0JBQU8sQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0FBRTNDLFFBQUEsY0FBYyxHQUFHLENBQUMsUUFBa0IsRUFBaUIsRUFBRSxDQUNoRSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7SUFDakIsT0FBTztRQUNILElBQUksRUFBRSxxQkFBZSxDQUFDLEtBQUs7UUFDM0IsSUFBSSxFQUFFLEdBQUc7UUFDVCxPQUFPLEVBQUUsR0FBRztLQUNBLENBQUM7QUFDckIsQ0FBQyxDQUFDLENBQUM7QUFFTSxRQUFBLFdBQVcsR0FBRyxDQUFJLE9BQVUsRUFBaUIsRUFBRTtJQUN4RCxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JCLE9BQU87UUFDSDtZQUNJLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztZQUM3QixPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7WUFDaEMsSUFBSSxFQUFFLHFCQUFlLENBQUMsS0FBSztTQUM5QjtLQUNKLENBQUM7QUFDTixDQUFDLENBQUM7QUFrQlcsUUFBQSxhQUFhLEdBQUcsQ0FBSSxJQUFPLEVBQW1CLEVBQUU7SUFDekQsT0FBTztRQUNILE1BQU0sRUFBRSxJQUFJO1FBQ1osTUFBTSxFQUFFLFNBQVM7S0FDcEIsQ0FBQztBQUNOLENBQUMsQ0FBQztBQUVXLFFBQUEsV0FBVyxHQUFHLENBQUMsTUFBcUIsRUFBMkIsRUFBRTtJQUMxRSxPQUFPO1FBQ0gsTUFBTTtRQUNOLE1BQU0sRUFBRSxTQUFTO0tBQ3BCLENBQUM7QUFDTixDQUFDLENBQUM7QUFFVyxRQUFBLGNBQWMsR0FBRyxDQUFJLElBQU8sRUFBMkIsRUFBRTtJQUNsRSxPQUFPLEdBQUcsRUFBRSxDQUNSLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDWixNQUFNLEVBQUUsSUFBSTtRQUNaLE1BQU0sRUFBRSxTQUFTO0tBQ3BCLENBQUMsQ0FBQztBQUNYLENBQUMsQ0FBQztBQUVXLFFBQUEsdUJBQXVCLEdBQUcsQ0FBSSxRQUFrQixFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQU8sRUFBb0IsRUFBRTtJQUM1RixPQUFPLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3RELENBQUMsQ0FBQztBQUVXLFFBQUEsWUFBWSxHQUFHLENBQUMsTUFBcUIsRUFBbUMsRUFBRTtJQUNuRixPQUFPLEdBQUcsRUFBRSxDQUNSLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDWixNQUFNO1FBQ04sTUFBTSxFQUFFLFNBQVM7S0FDcEIsQ0FBQyxDQUFDO0FBQ1gsQ0FBQyxDQUFDO0FBRVcsUUFBQSxxQkFBcUIsR0FBRyxDQUFJLFFBQWtCLEVBQUUsRUFBRSxDQUFDLENBQUMsTUFBcUIsRUFBb0IsRUFBRTtJQUN4RyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUMvQyxPQUFPLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMscUJBQXFCLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNqRyxDQUFDLENBQUM7QUFFVyxRQUFBLFlBQVksR0FBRyxDQUFDLE1BQWMsRUFBaUIsRUFBRSxDQUMxRCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7SUFDakIsT0FBTztRQUNILE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztRQUM5QixJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7UUFDM0IsSUFBSSxFQUFFLHFCQUFlLENBQUMsS0FBSztLQUNmLENBQUM7QUFDckIsQ0FBQyxDQUFDLENBQUMifQ==